#
# .tmux.conf
#
# from: https://github.com/tokorom/dotfiles/blob/master/.tmux.conf
#       http://d.hatena.ne.jp/u1tnk/20110307/1299502743
#


set-window-option -g utf8 on    # 日本語環境なら今のところ必須。
set -g history-limit 50000

# mode-keys
set-window-option -g mode-keys vi


# 設定リロード
bind-key R source-file ~/.tmux.conf \; \
                   display-message "source-file done"


##### Prefix key #####
# Set the prefix to ^T.
unbind-key C-b
set-option -g prefix C-t
bind-key t send-prefix


##### View #####
set-option status on

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right ""

# ステータスライン更新間隔(秒)
set -g status-interval 5

# Highlight active window
set-window-option -g window-status-current-bg red

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


##### Platform dependent ####
set-option -g default-terminal xterm-256color


##### Option #####
set-option -g display-panes-time 1500


##### Keybind #####
# === Detach =================================
# detach ^D d
unbind d
bind d confirm-before -p "detach? (y/n)" detach


# === Window =================================
# -- Move window ------------
unbind C-n
bind C-n next-window
unbind C-p
bind C-p previous-window
unbind C-c
bind C-c new-window
unbind C-t
bind C-t last-window

# -- Kill window ------------
unbind K
bind K confirm-before -p "kill-window #P (y/n)" kill-window

# -- Break window ------------
# 分割していたペインそれぞれを Window に分ける
unbind b
bind b break-pane


# === Pane =================================
# -- Split window ------------
# split -v |
unbind |
bind | split-window -h

# split -h -
unbind -
bind - split-window -v

# -- Kill pane ------------
unbind x
bind x confirm-before -p "kill-pane #P (y/n)" kill-pane

# -- Select pane ------------
unbind C-k
bind -r C-k select-pane -U
unbind C-j
bind -r C-j select-pane -D
unbind C-h
bind -r C-h select-pane -L
unbind C-l
bind -r C-l select-pane -R
unbind V
bind V display-panes
unbind C-o
bind C-o last-pane


#-- Resize pane ------------
unbind k
bind -r k resize-pane -U 2
unbind j
bind -r j resize-pane -D 2
unbind h
bind -r h resize-pane -L 2
unbind l
bind -r l resize-pane -R 2

#-- Swap pane ------------
unbind s
bind s swap-pane -U

# === Copy Mode =================================
unbind C-[
bind C-[ copy-mode


# ======================================================================
#  References
# ======================================================================
#
#  bind-key [-cnr] [-t key-table] key command [arguments]
#   (alias: bind)
#      Bind key key to command.  By default (without -t) the primary key bindings
#      are modified (those normally activated with the prefix key); in this case, if
#      -n is specified, it is not necessary to use the prefix key, command is bound
#      to key alone.  The -r flag indicates this key may repeat, see the repeat-time
#      option.
# 
#      If -t is present, key is bound in key-table: the binding for command mode
#      with -c or for normal mode without.  To view the default bindings and possi-
#      ble commands, see the list-keys command.
#
#  list-keys [-t key-table]
#   (alias: lsk)
#      List all key bindings.  Without -t the primary key bindings - those executed
#      when preceded by the prefix key - are printed.  Keys bound without the prefix
#      key (see bind-key -n) are marked with `(no prefix)'.
# 
#      With -t, the key bindings in key-table are listed; this may be one of:
#      vi-edit, emacs-edit, vi-choice, emacs-choice, vi-copy or emacs-copy.
# 
